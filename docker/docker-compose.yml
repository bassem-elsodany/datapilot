name: datapilot

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: datapilot
      MONGO_INITDB_USERNAME: datapilot
      MONGO_INITDB_PASSWORD: datapilot123
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - datapilot-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API service
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: backend
    restart: unless-stopped
    env_file:
      - environment-configs/backend.env
    environment:
      - PYTHONPATH=/app
    ports:
      - "8001:8000"
    volumes:
      - ../backend/logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - datapilot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend dashboard service
  dashboard:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dashboard
    container_name: dashboard
    restart: unless-stopped
    env_file:
      - environment-configs/dashboard.env
    ports:
      - "3001:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - datapilot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongodb_data:
    driver: local

networks:
  datapilot-network:
    driver: bridge
